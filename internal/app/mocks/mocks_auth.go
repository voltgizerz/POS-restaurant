// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/ports/auth_ports.go
//
// Generated by this command:
//
//	mockgen -source=./internal/app/ports/auth_ports.go -destination=./internal/app/mocks/mocks_auth.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v5"
	entity "github.com/voltgizerz/POS-restaurant/internal/app/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockIAuth is a mock of IAuth interface.
type MockIAuth struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthMockRecorder
}

// MockIAuthMockRecorder is the mock recorder for MockIAuth.
type MockIAuthMockRecorder struct {
	mock *MockIAuth
}

// NewMockIAuth creates a new mock instance.
func NewMockIAuth(ctrl *gomock.Controller) *MockIAuth {
	mock := &MockIAuth{ctrl: ctrl}
	mock.recorder = &MockIAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuth) EXPECT() *MockIAuthMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockIAuth) CreateToken(ctx context.Context, user entity.UserORM) (*entity.CreateTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", ctx, user)
	ret0, _ := ret[0].(*entity.CreateTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockIAuthMockRecorder) CreateToken(ctx, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockIAuth)(nil).CreateToken), ctx, user)
}

// VerifyToken mocks base method.
func (m *MockIAuth) VerifyToken(ctx context.Context, tokenString string) (*jwt.Token, jwt.MapClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", ctx, tokenString)
	ret0, _ := ret[0].(*jwt.Token)
	ret1, _ := ret[1].(jwt.MapClaims)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockIAuthMockRecorder) VerifyToken(ctx, tokenString any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockIAuth)(nil).VerifyToken), ctx, tokenString)
}
