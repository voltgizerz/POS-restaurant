// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/core/ports/tx_ports.go
//
// Generated by this command:
//
//	mockgen -source=./internal/core/ports/tx_ports.go -destination=./internal/mocks/mocks_tx.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	sql "database/sql"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockITxRepository is a mock of ITxRepository interface.
type MockITxRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITxRepositoryMockRecorder
}

// MockITxRepositoryMockRecorder is the mock recorder for MockITxRepository.
type MockITxRepositoryMockRecorder struct {
	mock *MockITxRepository
}

// NewMockITxRepository creates a new mock instance.
func NewMockITxRepository(ctrl *gomock.Controller) *MockITxRepository {
	mock := &MockITxRepository{ctrl: ctrl}
	mock.recorder = &MockITxRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITxRepository) EXPECT() *MockITxRepositoryMockRecorder {
	return m.recorder
}

// CommitTx mocks base method.
func (m *MockITxRepository) CommitTx(ctx context.Context, tx *sql.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTx", ctx, tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTx indicates an expected call of CommitTx.
func (mr *MockITxRepositoryMockRecorder) CommitTx(ctx, tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTx", reflect.TypeOf((*MockITxRepository)(nil).CommitTx), ctx, tx)
}

// RollbackTx mocks base method.
func (m *MockITxRepository) RollbackTx(ctx context.Context, tx *sql.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RollbackTx", ctx, tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// RollbackTx indicates an expected call of RollbackTx.
func (mr *MockITxRepositoryMockRecorder) RollbackTx(ctx, tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RollbackTx", reflect.TypeOf((*MockITxRepository)(nil).RollbackTx), ctx, tx)
}

// StartTx mocks base method.
func (m *MockITxRepository) StartTx(ctx context.Context) (*sql.Tx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartTx", ctx)
	ret0, _ := ret[0].(*sql.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartTx indicates an expected call of StartTx.
func (mr *MockITxRepositoryMockRecorder) StartTx(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartTx", reflect.TypeOf((*MockITxRepository)(nil).StartTx), ctx)
}
